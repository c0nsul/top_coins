import React, {useEffect, useState} from "react"
    import ReactApexChart from "react-apexcharts"
import useFetch from "hooks/useFetch"

const Liquidity = () => {

    const apiUrl = `/cryptocurrency/listings/latest?convert=USD&limit=100`
    const [{response}, doFetch] = useFetch(apiUrl)
    let state2 = {series: [], options: {}}
    const [details, setDetails] = useState(null)

    useEffect(() => {
        doFetch()
    }, [doFetch])

    const updateDetails = (index) => {
                setDetails(`Name: ${response.data[index].name}, 
                    Market Cap: ${new Intl.NumberFormat("en-US", {
                    style: "currency",
                    currency: "USD"
                }).format(response.data[index].quote.USD.market_cap)}, 
                volume: ${new Intl.NumberFormat("en-US", {
                    style: "currency",
                    currency: "USD"
                }).format(response.data[index].quote.USD.volume_24h)}, 
                price change: ${response.data[index].quote.USD.percent_change_1h.toFixed(2)}%`)
    }

    if (response) {
        let series = []
        response.data.forEach((coin, index) => {
                series = {
                    "id": coin.id,
                    "name": coin.name,
                    "data": [
                        [
                            coin.quote.USD.volume_24h,
                            coin.quote.USD.market_cap
                        ]
                    ],
                }
                state2.series = [...state2.series, series]
            }
        )

        //options
        state2.options = {
            chart: {
                height: 350,
                type: 'scatter',
                zoom: {
                    enabled: true,
                    type: 'xy'
                },
                events: {
                    markerClick: function (event, chartContext, { seriesIndex, dataPointIndex, config}) {
                        updateDetails(seriesIndex)
                    }
                }
            },
            grid: {
                xaxis: {
                    lines: {
                        show: true
                    }
                },
                yaxis: {
                    lines: {
                        show: true
                    }
                },
            },
            xaxis: {
                type: 'numeric',
                tickAmount: 20,
                title: {
                    text: 'Market Capitalization',
                },
                labels: {
                    show: true,
                    formatter: function (val) {
                        return parseFloat(val).toFixed(0)
                    }
                },
                logarithmic: true

            },
            yaxis: {
                type: 'numeric',
                labels: {
                    show: true,
                    formatter: function (val) {
                        return parseFloat(val).toFixed(0)
                    }
                },
                title: {
                    text: ' Volume (24h)',
                }
            },
            title: {
                text: '(click for details)',
                align: 'center'
            },
            dataLabels: {
                enabled: false
            }
        }
    }


    return (
        <div id="chart">
            <div className="banner">
                <div className="container">
                    <h1>Liquidity analysis</h1>
                    <p>chart</p>
                </div>
            </div>
            <div>{details}</div>
            <hr/>
            <ReactApexChart options={state2.options} series={state2.series} type="scatter" height={500}/>
        </div>
    )

}

export default Liquidity